{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","role","key","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"kLAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAOd,yBAAKO,UAAU,cACX,2BACIC,KAAK,OACLC,YAAY,kBACZC,MAAOX,EACPQ,UAAU,eACVI,SArBU,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,UAsBf,4BAAQF,KAAK,SAASD,UAAU,uCAAhC,a,uBC9BHM,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAETC,EAFS,iDAEwCC,UAAUH,GAFlD,+DAGII,MAAOF,GAHX,cAGTG,EAHS,gBAIMA,EAAKC,OAJX,uBAIRC,EAJQ,EAIRA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV3B,kBAaRM,GAbQ,4CAAH,sDCKPO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAElC,OACI,yBAAKT,UAAU,QACX,yBAAKA,UAAU,eAAeuB,IAAMd,EAAMe,IAAML,IAChD,yBAAKnB,UAAU,aACX,uBAAGA,UAAU,aAAcmB,MCL9BM,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAEdO,ECLgB,SAAEP,GAAe,IAAD,EACfhB,mBAAS,CAC/BuB,KAAM,GACNY,SAAS,IAH4B,mBAClCC,EADkC,KAC3BC,EAD2B,KAgBzC,OAVAC,qBAAW,WACPvB,EAASC,GACPuB,MAAM,SAAAC,GACHH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAGnB,CAAEnB,IAEEoB,EDXWK,CAAczB,GAAvBO,KAGR,OACI,6BACI,yBAAKd,UAAU,mBAAmBiC,KAAK,SACjC1B,GAEN,yBAAKP,UAAU,gBAEfc,EAAKE,KAAK,SAAAC,GAAG,OACb,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACJD,UEhBRkB,EAAgB,WAAO,IAAD,EAEK5C,mBAAS,CAAC,WAFf,mBAExB6C,EAFwB,KAEZ9C,EAFY,KAK/B,OACI,yBAAKU,UAAU,aACX,wBAAIA,UAAU,mBAAd,WAEA,kBAAC,EAAD,CAAaV,cAAeA,IAE5B,6BAEQ8C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CAASA,SAAWA,EAAW2B,IAAM3B,UCf7D8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.ca84c627.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 1) {\r\n            setCategories( cats => [ inputValue, ...cats])\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Escribe algo...\"\r\n                    value={inputValue}\r\n                    className=\"form-control\"\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block my-1 mb-5\">Enviar</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async( category ) => {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=GdsAwDrSavmXN0VySdxd5sJRlHv78PbN`;\r\n        const resp = await fetch( url );\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n        return gifs;\r\n    }","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n    \r\n    return (\r\n        <div className=\"card\">\r\n            <img className=\"card-img-top\" src={ url } alt={ title } />\r\n            <div className=\"card-body\">\r\n                <p className=\"card-text\">{ title }</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired\r\n};\r\n","import React  from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data } = useFetchGifs( category );\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"alert alert-info\" role=\"alert\">\r\n                { category }\r\n            </div>\r\n            <div className=\"card-columns\">\r\n            {\r\n            data.map( img => (\r\n            <GifGridItem \r\n                key={img.id}\r\n                { ...img }\r\n            />\r\n            ))\r\n            }\r\n            </div>\r\n        </div>\r\n        \r\n\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n   const [state, setstate] = useState({\r\n       data: [],\r\n       loading: true\r\n   });\r\n\r\n   useEffect( () => {\r\n       getGifs( category )\r\n        .then( imgs => {\r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        } )\r\n   }, [ category ])\r\n\r\n   return state;\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GiftExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['naruto']);\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"text-center m-5\">Gif-App</h1>\r\n            \r\n            <AddCategory setCategories={setCategories}/>\r\n            \r\n            <div>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid category={ category } key={ category }/>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './GiftExpertApp';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}